I"~#<table>
  <thead>
    <tr>
      <th> </th>
      <th><em>目 录</em></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><a href="#link1">Google地图简介</a></td>
    </tr>
    <tr>
      <td>2</td>
      <td><a href="#link2">创建一个简单的 Google 地图</a></td>
    </tr>
    <tr>
      <td>3</td>
      <td><a href="#link3">总结与心得</a></td>
    </tr>
  </tbody>
</table>

<p><a id="link1"></a></p>

<h2 id="一google地图简介">一.Google地图简介</h2>

<p>GoogleMapsAPI除了帮助开发者将地图嵌入到Web应用中之外，还允许开发者利用JavaScript脚本进行应用开发拓展，给地图添加标注和路径及其他图层覆盖物，或者响应用户的点击动作，并显示包含内容信息在内的气泡提示窗口。</p>

<p>通过GoogleMaps为开发者提供的地图API，可以开发出各种各样有趣的地图Mash-up应用，还可以将不同地图图层加载到应用中，如卫星影像、根据海拔高度绘制的高山和植被地形图、街道视图等，从而帮助开发者打造个性化的地图应用站点。</p>

<p>Google 地图 API 是一种通过 JavaScript 将 Google 地图嵌入到您的网页的 API。该 API 提供了大量实用工具用以处理地图,并通过各种服务向地图添加内容，从而使您能够在您的网站上创建功能全面的地图应用程序。</p>

<p>地图 API 是一项免费的服务，任何非盈利性网站均可使用。</p>

<p><a id="link2"></a></p>

<h2 id="二创建一个简单的-google-地图">二.创建一个简单的 Google 地图</h2>

<p>我们通过引入插件的方式创建Google地图</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDY0kkJiTPVd2U7aTOAwhc9ySH6oHxOIYM&amp;sensor=false"&gt;
&lt;/script&gt;

&lt;script&gt;
function initialize()
{
var mapProp = {
  center:new google.maps.LatLng(51.508742,-0.120850),
  zoom:5,
  mapTypeId:google.maps.MapTypeId.ROADMAP
  };
var map=new google.maps.Map(document.getElementById("googleMap")
  ,mapProp);
}

google.maps.event.addDomListener(window, 'load', initialize);
&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;div id="googleMap" style="width:500px;height:380px;"&gt;&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;
</code></pre></div></div>

<h3 id="1应用为什么要声明-html5">1.应用为什么要声明 HTML5?</h3>

<p><code class="language-plaintext highlighter-rouge">&lt;!DOCTYPE html&gt;</code>大多数浏览器使用 “标准模式” 的 HTML5 文档渲染页面，这就意味着你的应用是兼容各大浏览器的。</p>

<p>另外，如果没有DOCTYPE标签，浏览器则使用混杂模式 (quirks mode)进行渲染页面内容。</p>

<p><strong>提示</strong>： 应该注意的是一些”混杂模式 “中的CSS并不能使用与标准模式中。在具体的应用中，所有基于百分比的大小都必须从父块元素继承 。如果在父模块中没有指定大小，默认值为 0 x 0 像素。如果你想使用百分比，可以在<style> 标签中声明，如下所示：</style></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;style type="text/css"&gt;
html {height:100%}
body {height:100%;margin:0;padding:0}
#googleMap {height:100%}
&lt;/style&gt; 这个样式声明表明地图模块的（GoogleMap）应 HTML高度为100%。
</code></pre></div></div>

<h3 id="2添加-google-地图-api-key">2.添加 Google 地图 API Key</h3>

<p>在以下实例中第一个<script> 标签中必须包含 Google 地图 API：</script></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script src="http://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;sensor=TRUE_OR_FALSE"&gt;
&lt;/script&gt;
</code></pre></div></div>

<p>将google生成的 API key 放置于 key 参数中(key=YOUR_API_KEY)。
<strong>sensor</strong>
这个参数是必须的，该参数用于指明应用程序是否使用一个传感器 (类似 GPS 导航) 来定位用户的位置。参数值可以设置为 true 或者 false。
<strong>HTTPS</strong>
如果你的应用是安全的HTTP(HTTPS:HTTP Secure)应用,你可以使用 HTTPS 来加载 Google 地图 API：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&amp;sensor=TRUE_OR_FALSE"&gt;
&lt;/script&gt;
</code></pre></div></div>

<h3 id="3异步加载">3.异步加载</h3>

<p>同样我们也可以在页面完全载入后再加载 Google 地图 API。
以下实例使用了 window.onload 来实现页面完全载入后加载 Google 地图 。 loadScript() 函数创建了加载 Google 地图 API     <code class="language-plaintext highlighter-rouge">&lt;script&gt;</code> 标签。此外在标签的末尾添加了 callback=initialize 参数， initialize()作为回调函数会在API完全载入后执行：</p>

<p><strong>实例</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function loadScript()
{
var script = document.createElement("script");
script.src = "http://maps.googleapis.com/maps/api/js?      key=AIzaSyDY0kkJiTPVd2U7aTOAwhc9ySH6oHxOIYM&amp;sensor=false&amp;callback=initialize"; document.body.appendChild(script);
}

window.onload = loadScript;
</code></pre></div></div>

<h3 id="4定义地图属性">4.定义地图属性</h3>
<p>在初始化地图前，我们需要先创建一个 Map 属性对象来定义一些地图的属性：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var mapProp = {
  center:new google.maps.LatLng(51.508742,-0.120850),
  zoom:7,
  mapTypeId: google.maps.MapTypeId.ROADMAP
};
</code></pre></div></div>

<p><strong>center（中心点）</strong>
中心属性指定了地图的中心，该中心通过坐标（纬度，经度）在地图上创建一个中心点。</p>

<p><strong>Zoom（缩放级数）</strong>
zoom 属性指定了地图的 缩放级数。zoom: 0
显示了整个地球地图的完全缩放。</p>

<p>MapTypeId（地图的初始类型）</p>

<p>mapTypeId 属性指定了地图的初始类型。</p>

<p>mapTypeId包括如下四种类型：</p>

<ul>
  <li>
    <p>google.maps.MapTypeId.HYBRID：显示卫星图像的主要街道透明层</p>
  </li>
  <li>
    <p>google.maps.MapTypeId.ROADMAP：显示普通的街道地图</p>
  </li>
  <li>
    <p>google.maps.MapTypeId.SATELLITE：显示卫星图像</p>
  </li>
  <li>
    <p>google.maps.MapTypeId.TERRAIN：显示带有自然特征（如地形和植被）的地图</p>
  </li>
</ul>

<p><strong>在哪里显示 Google 地图</strong></p>

<p>通常 Google 地图使用于<code class="language-plaintext highlighter-rouge"> &lt;div&gt;</code> 元素中：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;div id="googleMap" style="width:500px;height:380px;"&gt;
&lt;/div&gt; &gt;注意： 地图将以div中设置的大小来显示地图的大小，所以我们可以在   `&lt;div&gt;`元素中设置地图的大小。
</code></pre></div></div>

<h3 id="5创建一个-map-对象">5.创建一个 Map 对象</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var map=new google.maps.Map(document.getElementById("googleMap")
,mapProp); 以上代码使用参数(mapProp)在&lt;div&gt; 元素 (id为googleMap) 创建了一个新的地图。 &gt;提示：如果想在页面中创建多个地图，你只需要添加新的地图对象即可。
</code></pre></div></div>

<p>以下实例定义了四个地图实例 (四个地图使用了不同的地图类型):
实例:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var map = new google.maps.Map(document.getElementById("googleMap"),mapProp);
var map2 = new google.maps.Map(document.getElementById("googleMap2"),mapProp2);
var map3 = new google.maps.Map(document.getElementById("googleMap3"),mapProp3);
var map4 = new google.maps.Map(document.getElementById("googleMap4"),mapProp4);
</code></pre></div></div>

<h3 id="6加载地图">6.加载地图</h3>
<p>窗口载入后通过执行 initialize() 函数来初始化 Map 对象，这样可以确保在页面完全载入后再加载 Google 地图：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>google.maps.event.addDomListener(window, 'load', initialize);
</code></pre></div></div>

<p><a id="link3"></a></p>

<h3 id="三总结与心得">三.总结与心得</h3>

<p>最近在做凤来的临柜时长，涉及了山西地图等问题，用的是echart地图来画，偶然看到了Google地图API插件，做出来的效果不错，如果有兴趣大家可以深入的了解一下。</p>

:ET