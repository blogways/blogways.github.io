I"<blockquote>
  <p>安装Storm集群，需要依赖以下组件：</p>

  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Zookeeper
Python
Zeromq
Storm
JDK
JZMQ
</code></pre></div>  </div>
</blockquote>

<blockquote>
  <p>我准备了3台机器，并在每台机器上配置主机别名，$ vi /etc/hosts</p>
</blockquote>

<p><img src="/images/zhaojiajun/20161120img01.png" alt="20161120img01" /></p>

<h2 id="1搭建zookeeper集群">1.搭建Zookeeper集群</h2>

<h4 id="1安装zookeeper">(1)安装zookeeper</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ tar zxvf zookeeper-3.4.6.tar.gz
</code></pre></div></div>

<h4 id="2修改zoocfg">(2)修改zoo.cfg</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ cp -rf conf/zoo_sample.cfg conf/zoo.cfg
$ vi zoo.cfg
</code></pre></div></div>

<blockquote>
  <p>内容：</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tickTime=2000
dataDir=/usr/local/software/zookeeper-3.4.6/data
clientPort=2181
initLimit=5
syncLimit=2
server.1=host1:2888:3888
server.2=host2:2889:3889
server.3=host3:2890:3890
</code></pre></div></div>

<h4 id="3在datadir的目录中添加myid并且编辑内容分别对应server的序号分别是123">(3)在”dataDir”的目录中添加myid，并且编辑内容分别对应server的序号，分别是1、2、3</h4>

<h4 id="4在三台机器上分别启动">(4)在三台机器上分别启动</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ./bin/zkServer.sh start ./conf/zoo.cfg
</code></pre></div></div>

<blockquote>
  <p>通过$ ./bin/zkServer.sh status 查看zookeeper的leader</p>
</blockquote>

<p><img src="/images/zhaojiajun/20161120img02.png" alt="20161120img02" /></p>

<p><img src="/images/zhaojiajun/20161120img03.png" alt="20161120img03" /></p>

<p><img src="/images/zhaojiajun/20161120img04.png" alt="20161120img04" /></p>

<h2 id="2安装jdk">2.安装JDK</h2>

<h4 id="1-tar-zxvf-jdk-7u79-linux-x64targz">(1) tar zxvf jdk-7u79-linux-x64.tar.gz</h4>

<h4 id="2-配置环境变量">(2) 配置环境变量</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ vi /etc/profile
</code></pre></div></div>

<p><img src="/images/zhaojiajun/20161120img05.png" alt="20161120img05" /></p>

<blockquote>
  <p>运行$ source /etc/profile，使配置环境生效</p>
</blockquote>

<h4 id="3查看java版本">(3)查看java版本</h4>

<p><img src="/images/zhaojiajun/20161120img06.png" alt="20161120img06" /></p>

<h2 id="3安装jzmq">3.安装JZMQ</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git clone git://github.com/nathanmarz/jzmq.git
$ cd jzmq
$ ./autogen.sh
$ ./configure
$ make &amp; make install
</code></pre></div></div>

<h2 id="4安装zeromq">4.安装Zeromq</h2>

<blockquote>
  <p>安装ZeroMQ所需组件及工具：</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ yum install gcc gcc-c++ make uuid-devel libuuid-devel libtool

$ tar zxvf zeromq-4.2.0.tar.gz
$ cd zeromq-4.2.0
</code></pre></div></div>

<blockquote>
  <p>手动创建classdist_noinst.stamp空文件</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ touch src/classdist_noinst.stamp
</code></pre></div></div>

<blockquote>
  <p>进入文件夹 jzmq/src/org/zeromq，手动编译Java代码 $ javac  *.java</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ./configure
$ make &amp; make install
</code></pre></div></div>

<h2 id="5搭建storm集群">5.搭建Storm集群</h2>

<blockquote>
  <p>(1) 安装包</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ tar zxvf apache-storm-1.0.2.tar.gz
</code></pre></div></div>

<blockquote>
  <p>(2) 配置环境变量</p>
</blockquote>

<p><img src="/images/zhaojiajun/20161120img07.png" alt="20161120img07" /></p>

<blockquote>
  <p>(3) 建立storm存储目录</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ mkdir /tmp/storm
</code></pre></div></div>

<blockquote>
  <p>(4) 把host1作为nimbus和ui的服务器。host1、host2、host3为supervisor服务器，修改配置文件/conf/storm.yaml, 如下配置：</p>
</blockquote>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>storm.zookeeper.servers:
 - "host1"
 - "host2"
 - "host3"
ui.port: 8081
nimbus.host: "host1"
storm.local.dir: "/tmp/storm"
supervisor.slots.ports:
  - 6700
  - 6701
  - 6702
  - 6703
</code></pre></div></div>

<blockquote>
  <p><strong>其中，配置参数说明：</strong></p>

  <p>• storm.zookeeper.servers：Storm集群使用的Zookeeper集群地址，如果Zookeeper集群使用的不是默认端口，那么还需要storm.zookeeper.port选项。</p>

  <p>• ui.port：Storm UI的服务端口</p>

  <p>• storm.local.dir：Nimbus和Supervisor进程用于存储少量状态，如jars、confs等的本地磁盘目录</p>

  <p>• nimbus.host: Storm集群Nimbus机器地址</p>

  <p>• supervisor.slots.ports: 对于每个Supervisor工作节点，需要配置该工作节点可以运行的worker数量。每个worker占用一个单独的端口用于接收消息，该配置选项即用于定义哪些端口是可被worker使用的。默认情况下，每个节点上可运行4个workers，分别在6700、6701、6702和6703端口</p>
</blockquote>

<h2 id="6启动storm集群">6.启动Storm集群</h2>

<h4 id="1-nimbus">(1) Nimbus:</h4>

<blockquote>
  <p>在Storm主控节点(本文中为host1)上运行”bin/storm nimbus &gt;/dev/null 2&gt;&amp;1 &amp;”启动Nimbus后台程序，并放到后台执行；</p>
</blockquote>

<h4 id="2-supervisor">(2) Supervisor:</h4>

<blockquote>
  <p>在Storm各个工作节点(本文中为host1/host2/host3)上运行”bin/storm supervisor &gt;/dev/null 2&gt;&amp;1 &amp;”启动Supervisor后台程序，并放到后台执行；</p>
</blockquote>

<h4 id="3-ui">(3) UI:</h4>

<blockquote>
  <p>在Storm主控节点(本文中为host1)上运行”bin/storm ui &gt;/dev/null 2&gt;&amp;1 &amp;”启动UI后台程序，并放到后台执行。</p>
</blockquote>

<h2 id="7查看storm-ui">7.查看Storm UI</h2>

<blockquote>
  <p>请求 <em>http://192.168.137.131:8081/</em></p>
</blockquote>

<p><img src="/images/zhaojiajun/20161120img08.png" alt="20161120img08" /></p>

<p><strong>自此storm集群环境就搭建完毕了。</strong></p>
:ET