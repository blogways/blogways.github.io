I"77<table>
  <thead>
    <tr>
      <th> </th>
      <th><em>目 录</em></th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>1</td>
      <td><a href="#use_plugin">使用插件</a></td>
    </tr>
    <tr>
      <td>2</td>
      <td><a href="#dev_plugin">开发插件</a></td>
    </tr>
    <tr>
      <td>3</td>
      <td><a href="#reference">参考文献</a></td>
    </tr>
  </tbody>
</table>

<p>使用cordova可以开发手机App的绝大部分功能。如想给你的App增加更多的偏手机级别特性功能，可以通过cordova插件实现。cordova插件很多，有官方的，也有社区开源的，还可以自己定制。</p>

<p>下面简单介绍一下，插件的使用与开发。</p>

<h2 id="一使用插件-">一、使用插件 <a href="use_plugin"></a></h2>

<p>两种方法都可以帮你的cordova项目添加插件：</p>

<h3 id="11-方法一">1.1 方法一</h3>

<p>使用<code class="language-plaintext highlighter-rouge">cordova plugin</code>命令。属于套装命令，快速搞定所有平台。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova {plugin | plugins} [
    add &lt;plugin-spec&gt; [..] {--searchpath=&lt;directory&gt; | --noregistry | --link | --save | --browserify | --force | --nofetch} |
    {remove | rm} {&lt;pluginid&gt; | &lt;name&gt;} --save --nofetch |
    {list | ls} |
    search [&lt;keyword&gt;] |
    save |
]
</code></pre></div></div>

<p>举例：</p>

<ul>
  <li>
    <p>安装 <code class="language-plaintext highlighter-rouge">cordova-plugin-camera</code>和<code class="language-plaintext highlighter-rouge">cordova-plugin-file</code>两个插件:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova plugin add cordova-plugin-camera cordova-plugin-file
</code></pre></div>    </div>
  </li>
  <li>
    <p>从指定git仓库安装插件：</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova plugin add https://git-wip-us.apache.org/repos/asf/cordova-plugin-device.git
</code></pre></div>    </div>
  </li>
  <li>
    <p>从指定本地目录安装插件:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova plugin add ../cordova-plugin-camera
</code></pre></div>    </div>
  </li>
  <li>
    <p>从指定tar包安装插件:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova plugin add ../cordova-plugin-camera.tgz
</code></pre></div>    </div>
  </li>
  <li>
    <p>删除插件：</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova plugin rm camera
</code></pre></div>    </div>
  </li>
  <li>
    <p>查看项目中已安装插件：</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova plugin ls
</code></pre></div>    </div>
  </li>
</ul>

<h3 id="12-方法二">1.2 方法二：</h3>

<p>使用底层命令<code class="language-plaintext highlighter-rouge">Plugman</code>去管理插件，可以更灵活地实现安装。</p>

<h4 id="121-安装plugman">1.2.1 安装Plugman</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm install -g plugman
</code></pre></div></div>

<h4 id="122-安装插件">1.2.2 安装插件</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plugman install --platform &lt;ios|android|blackberry10|wp8&gt; --project &lt;directory&gt; --plugin &lt;name|url|path&gt; [--plugins_dir &lt;directory&gt;] [--www &lt;directory&gt;] [--variable &lt;name&gt;=&lt;value&gt; [--variable &lt;name&gt;=&lt;value&gt; ...]]
</code></pre></div></div>

<p>举例，在<code class="language-plaintext highlighter-rouge">android</code>平台下安装<code class="language-plaintext highlighter-rouge">cordova-plugin-camera</code>插件：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plugman install --platform android --project myProject --plugin cordova-plugin-battery-status
</code></pre></div></div>

<h4 id="123-删除插件">1.2.3 删除插件</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plugman uninstall --platform &lt;ios|android|blackberry10|wp8&gt; --project &lt;directory&gt; --plugin &lt;id&gt; [--www &lt;directory&gt;] [--plugins_dir &lt;directory&gt;]
</code></pre></div></div>

<h2 id="二开发插件-">二、开发插件 <a href="dev_plugin"></a></h2>

<h3 id="21-插件目录结构">2.1 插件目录结构</h3>

<p>一般，一个插件的目录结构如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.
├── src
│   ├── android
│   ├── ios
│   └── windows
├── www
├── package.json
└── plugin.xml
</code></pre></div></div>

<h4 id="211-pluginxml">2.1.1 <code class="language-plaintext highlighter-rouge">plugin.xml</code></h4>

<p>plugin.xml 内容大约如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;plugin xmlns="http://apache.org/cordova/ns/plugins/1.0"
        id="cordova-plugin-device" version="0.2.3"&gt;
    &lt;name&gt;Device&lt;/name&gt;
    &lt;description&gt;Cordova Device Plugin&lt;/description&gt;
    &lt;license&gt;Apache 2.0&lt;/license&gt;
    &lt;keywords&gt;cordova,device&lt;/keywords&gt;
    &lt;js-module src="www/device.js" name="device"&gt;
        &lt;clobbers target="device" /&gt;
    &lt;/js-module&gt;
    &lt;platform name="ios"&gt;
        &lt;config-file target="config.xml" parent="/*"&gt;
            &lt;feature name="Device"&gt;
                &lt;param name="ios-package" value="CDVDevice"/&gt;
            &lt;/feature&gt;
        &lt;/config-file&gt;
        &lt;header-file src="src/ios/CDVDevice.h" /&gt;
        &lt;source-file src="src/ios/CDVDevice.m" /&gt;
    &lt;/platform&gt;
&lt;/plugin&gt;
</code></pre></div></div>

<p>其中：</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">xmlns</code>设置命名空间，一般为：<code class="language-plaintext highlighter-rouge">http://apache.org/cordova/ns/plugins/1.0</code></li>
  <li><code class="language-plaintext highlighter-rouge">id</code>为插件的标识</li>
  <li><code class="language-plaintext highlighter-rouge">version</code>为插件版本</li>
  <li><code class="language-plaintext highlighter-rouge">name</code>、<code class="language-plaintext highlighter-rouge">description</code>、<code class="language-plaintext highlighter-rouge">license</code>、<code class="language-plaintext highlighter-rouge">keywords</code>，顾名思义，不解释。</li>
  <li><code class="language-plaintext highlighter-rouge">js-module</code>.大部分插件都包含一到多个Javascript文件，每个<code class="language-plaintext highlighter-rouge">js-module</code>包含一个js文件。<code class="language-plaintext highlighter-rouge">src</code>是文件路径，<code class="language-plaintext highlighter-rouge">name</code>是可以通过<code class="language-plaintext highlighter-rouge">cordova.require</code>在其他js文件中导入这个js文件。</li>
  <li><code class="language-plaintext highlighter-rouge">clobbers</code>是js模块导出到<code class="language-plaintext highlighter-rouge">window</code>对象下的命名空间。</li>
  <li><code class="language-plaintext highlighter-rouge">platform</code>是指定对应平台下的代码文件及相关设置。</li>
</ul>

<p>更多约定可以查看<a href="http://cordova.apache.org/docs/en/latest/plugin_ref/spec.html">plugin.xml规范</a>。</p>

<h4 id="212-www目录">2.1.2 <code class="language-plaintext highlighter-rouge">www</code>目录</h4>

<p>一般插件的Js文件会放在这个目录下。</p>

<h3 id="213-src目录">2.1.3 <code class="language-plaintext highlighter-rouge">src</code>目录</h3>

<p>一般下面会按支持的平台新建对应的子目录，比如：<code class="language-plaintext highlighter-rouge">android</code>、<code class="language-plaintext highlighter-rouge">ios</code>、<code class="language-plaintext highlighter-rouge">windows</code>…</p>

<p>具体各平台上功能实现代码都放在对应的子目录内，层次清晰。</p>

<h3 id="214-packagejson">2.1.4 <code class="language-plaintext highlighter-rouge">package.json</code></h3>

<p>编辑完<code class="language-plaintext highlighter-rouge">plugin.xml</code>后，可以通过命令生成<code class="language-plaintext highlighter-rouge">package.json</code>，如下：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>plugman createpackagejson /path/to/your/plugin
</code></pre></div></div>

<h3 id="22-javascript接口">2.2 <code class="language-plaintext highlighter-rouge">JavaScript</code>接口</h3>

<p>你可以按需设计你的JavaScript接口，但是需要调用<code class="language-plaintext highlighter-rouge">cordova.exec</code>来和原生平台进行交互。</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cordova.exec(&lt;successFunction&gt;, &lt;failFunction&gt;, &lt;service&gt;, &lt;action&gt;, [&lt;args&gt;]);
</code></pre></div></div>

<p>其中：</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">successFunction</code>：成功后回调函数；</li>
  <li><code class="language-plaintext highlighter-rouge">failFunction</code> ： 错误回调函数；</li>
  <li><code class="language-plaintext highlighter-rouge">service</code>: 原生侧程序服务名；</li>
  <li><code class="language-plaintext highlighter-rouge">action</code>: 原生侧程序动作名；</li>
  <li><code class="language-plaintext highlighter-rouge">args</code>: 传给原生侧程序的参数；</li>
</ul>

<p>举例：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>window.echo = function(str, callback) {
    cordova.exec(callback, function(err) {
        callback('Nothing to echo.');
    }, "Echo", "echo", [str]);
};
</code></pre></div></div>

<h3 id="23-android侧实现代码">2.3 Android侧实现代码</h3>

<h4 id="231-service">2.3.1 service</h4>

<p><code class="language-plaintext highlighter-rouge">plugin.xml</code>里配置service对应的源码文件：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;feature name="&lt;service_name&gt;"&gt;
    &lt;param name="android-package" value="&lt;full_name_including_namespace&gt;" /&gt;
&lt;/feature&gt;
</code></pre></div></div>

<p>举例：</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;platform name="android"&gt;
    &lt;config-file target="config.xml" parent="/*"&gt;
        &lt;feature name="Echo"&gt;
            &lt;param name="android-package" value="org.apache.cordova.plugin.Echo"/&gt;
        &lt;/feature&gt;
    &lt;/config-file&gt;

    &lt;source-file src="src/android/Echo.java" target-dir="src/org/apache/cordova/plugin" /&gt;
&lt;/platform&gt;
</code></pre></div></div>

<h4 id="232-原生代码">2.3.2 原生代码</h4>

<ol>
  <li>
    <p>首先，根据需要，可以选择添加<code class="language-plaintext highlighter-rouge">initialize</code>、<code class="language-plaintext highlighter-rouge">onResume</code>、<code class="language-plaintext highlighter-rouge">onDestroy</code>等方法，举例:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> @Override
 public void initialize(CordovaInterface cordova, CordovaWebView webView) {
         super.initialize(cordova, webView);
         // your init code here
 }
</code></pre></div>    </div>
  </li>
  <li>
    <p>JavaScript接口中的 <code class="language-plaintext highlighter-rouge">cordova.exec</code> 会执行 Android代码中的 <code class="language-plaintext highlighter-rouge">execute</code>方法。举例（<code class="language-plaintext highlighter-rouge">src/android/Echo.java</code>）：</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> package org.apache.cordova.plugin;
 import org.apache.cordova.CordovaPlugin;
 import org.apache.cordova.CallbackContext;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;

 public class Echo extends CordovaPlugin {

     @Override
     public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException {
         if (action.equals("echo")) {
             String message = args.getString(0);
             this.echo(message, callbackContext);
             return true;
         }
         return false;
     }
		
     private void echo(String message, CallbackContext callbackContext) {
         if (message != null &amp;&amp; message.length() &gt; 0) {
             callbackContext.success(message);
         } else {
             callbackContext.error("Expected one non-empty string argument.");
         }
     }
  	    }
</code></pre></div>    </div>
  </li>
</ol>

<h2 id="三参考文献">三、参考文献<a name="reference"></a></h2>

<ul>
  <li>http://cordova.apache.org/docs/en/latest/guide/hybrid/plugins/index.html</li>
  <li>http://cordova.apache.org/docs/en/latest/reference/cordova-cli/index.html#cordova-plugin-command</li>
  <li>http://cordova.apache.org/docs/en/latest/guide/platforms/android/plugin.html</li>
  <li>http://cordova.apache.org/docs/en/latest/plugin_ref/plugman.html</li>
  <li>http://cordova.apache.org/docs/en/latest/guide/platforms/android/plugin.html#echo-android-plugin-example</li>
</ul>
:ET